# sass-lint config generated by make-sass-lint-config v0.1.1
# refer https://github.com/sasstools/sass-lint/tree/master/docs/rules

files:
    include: '**/*.s+(a|c)ss'
    ignore: # standard ignores for Adaptive.js projects
        - 'node_modules/**'
        - 'bower_components/**/*.scss'
        - 'app/global/styles/base/**/*.scss'
options:
    formatter: stylish
    merge-default-rules: false
rules:
    # will enforce the use of the use of quotes in attribute values
    attribute-quotes:
        - 2
        - include: true
    # will enforce how many elements a BEM selector can contain
    bem-depth:
        - 2
        - max-depth: 1
    # will enforce whether one should use 0 or none when specifying a zero border value
    border-zero:
        - 2
        - convention: '0'
    # will enforce the use of the chosen brace style i.e {} is disallowed
    brace-style:
        - 2
        - allow-single-line: false
    # will enforce a convention for class names (-, _ are allowed)
    class-name-format:
        - 2
        - convention: hyphenatedbem
    # will enforce whether or not @import paths should have leading underscores and/or filename extensions
    clean-import-paths:
        - 2
        - filename-extension: false
        - leading-underscore: false
    # will enforce whether or not nested blocks should include a space between the last non-comment declaration or not
    empty-line-between-blocks:
        - 2
        - allow-single-line-rulesets: true
    # will enforce that extends should be written before declarations in a ruleset
    extends-before-declarations: 2
    # will enforce that extends should be written before mixins in a ruleset
    extends-before-mixins: 2
    # will enforce whether or not files should end with a newline.
    final-newline:
      - 2
      - include: true
    # will enforce the nesting of attributes (0 means no parent nesting allowed)
    force-attribute-nesting: 0
    # will enforce the nesting of elements (0 means no parent nesting allowed)
    force-element-nesting: 0
    # will enforce the nesting of pseudo elements/classes (0 means no parent nesting allowed)
    force-pseudo-nesting: 0
    # will enforce a convention for function names
    function-name-format:
        - 2
        - allow-leading-underscore: true
        - convention: '^[_A-Z]+$'
    # will enforce the length of hexadecimal values
    hex-length:
        - 2
        - style: short
    # will enforce the case of hexadecimal values
    hex-notation:
        - 2
        - style: lowercase
    # will enforce a convention for ids
    id-name-format:
        - 2
        - convention: '[a-z]|-{3}|_{3}|[^_]_[^_]'
    indentation:
        - 2
        - size: 4
    # will enforce whether or not decimal numbers should include a leading zero
    leading-zero:
        - 0
        - include: true
    # will enforce a convention for mixin names
    mixin-name-format:
        - 2
        - allow-leading-underscore: true
        - convention: '[a-z]|-{3}|_{3}|[^_]_[^_]'
    # will enforce that mixins should be written before declarations in a ruleset
    mixins-before-declarations: 2
    # will enforce how deeply a selector can be nested
    nesting-depth:
        - 2
        - max-depth: 4
    # will enforce the use of hexadecimal color values rather than literals.
    no-color-keyword: 0
    # will disallow the use of color literals and basic color functions in any
    # declarations other than variables or maps/lists
    no-color-literals: 0
    # will enforce the use of Sass single-line comments and disallow CSS comments
    no-css-comments: 2
    # will enforce that @debug statements are not allowed to be used
    no-debug: 2
    # will enforce that duplicate properties are not allowed within the same block
    no-duplicate-properties: 2
    # will enforce that rulesets are not empty.
    no-empty-rulesets: 0
    # will enforce that extends are not allowed to be used
    no-extends: 0
    # will enforce that ID selectors are not allowed to be used
    no-ids: 0
    # will enforce that important declarations are not allowed to be used
    no-important: 0
    # will enforce that only valid of hexadecimal values are written
    no-invalid-hex: 0
    # will enforce that selectors aren't repeated and that their properties are merged.
    # You may also pass a whitelist of selectors you wish to exclude from merging
    no-mergeable-selectors:
        - 2
        - whitelist: ['from', 'to']
    # will enforce the correct spelling of CSS properties and prevent the use of unknown CSS properties
    no-misspelled-properties:
        - 1
        - extra-properties: ['tap-highlight', 'overflow-scrolling']
    no-qualifying-elements:
      - 2
      - allow-element-with-attribute: true
        allow-element-with-class: false
        allow-element-with-id: false
