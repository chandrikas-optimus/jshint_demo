// Tile
// ===
//
// 1. Hide tile until it enters viewport. When c--come-in triggers, it will
//   change the opacity to 1. iOS only. See animation (bottom of this doc).

.c-tile {
    &.c--horizontal {
        display: flex;

        .c-tile__image,
        .c-tile__content {
            flex: 1 1 50%;
        }

        .c-tile__content {
            padding-top: $sub-unit/2; // 2px
            padding-bottom: $vertical-padding; // 12px
            padding-left: $horizontal-padding; // 12px
        }
    }

    .c-heading {
        color: $black;

        a {
            color: inherit;

            &:active,
            &:focus {
                color: $active-link-color;
            }
        }
    }
}


// Tile Image
// ---
//
// Note: tile__image also uses c-ratio to dictate its height (based on width).

.c-tile__image {

    img {
        display: block;
        width: 100%;
    }

    .c--unavailable & {
        opacity: 0.5;

        &::after {
            content: '';

            position: absolute;
            top: 0;
            left: 50%;

            display: block;
            width: 1px;
            height: 100%;

            background: rgba($black, 0.75);

            transform: rotate(40deg);
        }
    }
}


// Tile Title
// ---

.c-tile__title {
    font-family: $header-font-family;
}


// Loading spinner for the image
// ---

.c-tile__loading {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: $orchestra-layer;

    transform: translate(-50%, -50%);
}


// Enter-viewport animation for the tile. iOS only.
// ---
//
// 1. Override c-tile default.

.ios {
    .c--come-in {
        opacity: 0;

        transform: translateY(150px);

        animation: come-in 0.6s ease-out forwards;
    }

    .c--already-visible {
        opacity: 1 !important; // 1

        transform: translateY(0);

        animation: none;
    }
}


@keyframes come-in {
    to {
        opacity: 1;

        transform: translateY(0);
    }
}
